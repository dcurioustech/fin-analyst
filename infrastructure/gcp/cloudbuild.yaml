# Cloud Build configuration for Financial Analysis Assistant
steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/financial-analysis-assistant:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/financial-analysis-assistant:latest'
      - '.'
  
  # Push the container images to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'gcr.io/$PROJECT_ID/financial-analysis-assistant']
  
  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'financial-analysis-assistant-${_ENVIRONMENT}'
      - '--image'
      - 'gcr.io/$PROJECT_ID/financial-analysis-assistant:$BUILD_ID'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '100'
      - '--concurrency'
      - '80'
      - '--timeout'
      - '300'
      - '--set-env-vars'
      - 'PROJECT_ID=$PROJECT_ID,REGION=${_REGION},ENVIRONMENT=${_ENVIRONMENT}'
      - '--service-account'
      - 'financial-analysis-${_ENVIRONMENT}@$PROJECT_ID.iam.gserviceaccount.com'

  # Set IAM policy for unauthenticated access
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'services'
      - 'add-iam-policy-binding'
      - 'financial-analysis-assistant-${_ENVIRONMENT}'
      - '--member=allUsers'
      - '--role=roles/run.invoker'
      - '--region=${_REGION}'

  # Display deployment info
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get the service URL
        SERVICE_URL=$(gcloud run services describe financial-analysis-assistant-${_ENVIRONMENT} \
          --region=${_REGION} \
          --format="value(status.url)")
        
        echo "üöÄ Deployment completed successfully!"
        echo "Service URL: $SERVICE_URL"
        echo ""
        echo "Testing health endpoint (non-blocking)..."
        if curl -f "$SERVICE_URL/health" 2>/dev/null; then
          echo "‚úÖ Health check passed!"
        else
          echo "‚ö†Ô∏è  Health check returned error (service may still be starting)"
          echo "Wait a few minutes and try: curl $SERVICE_URL/health"
        fi
        echo ""
        echo "To view logs:"
        echo "  gcloud logs read --service=financial-analysis-assistant-${_ENVIRONMENT} --limit=50"
        
        # Always exit successfully
        exit 0

# Substitutions for environment-specific deployments
substitutions:
  _ENVIRONMENT: 'dev'
  _REGION: 'us-central1'

# Store images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/financial-analysis-assistant:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/financial-analysis-assistant:latest'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  
# Build timeout
timeout: '1200s'