name: Release and Deploy

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  test-before-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run full test suite
      run: |
        pytest tests/ integration_tests/ -v --cov=. --cov-report=term-missing --cov-fail-under=60

    - name: Run security checks
      run: |
        pip install bandit safety
        bandit -r . -ll
        safety check

  build-and-deploy:
    needs: test-before-release
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker

    - name: Build Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/fin-analyst:${{ github.sha }} .
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/fin-analyst:latest .

    - name: Push Docker image
      run: |
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/fin-analyst:${{ github.sha }}
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/fin-analyst:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy fin-analyst \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/fin-analyst:${{ github.sha }} \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --set-env-vars="ENVIRONMENT=${{ github.event.inputs.environment || 'production' }}"

    - name: Run post-deployment tests
      run: |
        # Wait for deployment to be ready
        sleep 30
        # Run deployment verification
        python scripts/test_deployment.py --url=$(gcloud run services describe fin-analyst --platform managed --region us-central1 --format 'value(status.url)')